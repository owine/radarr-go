# Optimized Dockerfile using pre-built artifacts
# This avoids rebuilding Go binaries during Docker build

FROM alpine:3.22

RUN apk --no-cache add ca-certificates tzdata sqlite

WORKDIR /app

# Create non-root user
RUN addgroup -g 1000 radarr && \
    adduser -D -s /bin/sh -u 1000 -G radarr radarr

# Copy pre-built binary from artifacts based on target architecture
# Use build argument to select the correct binary
ARG TARGETARCH
COPY artifacts/radarr-linux-${TARGETARCH} ./radarr
COPY migrations ./migrations
COPY config.yaml .

# Ensure binary is executable
RUN chmod +x ./radarr

# Create data directory
RUN mkdir -p /data && chown -R radarr:radarr /data /app

USER radarr

EXPOSE 7878

VOLUME ["/data", "/movies"]

CMD ["./radarr", "-data", "/data"]
